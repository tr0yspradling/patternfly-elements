{"version":3,"file":"pfelement.umd.js","sources":["../_temp/reveal.js","../_temp/pfelement.umd.js"],"sourcesContent":["let logger = () => null;\n\nexport function reveal() {\n  logger(`[reveal] elements ready, revealing the body`);\n  window.document.body.removeAttribute(\"unresolved\");\n}\n\nexport function autoReveal(logFunction) {\n  logger = logFunction;\n  // If Web Components are already ready, run the handler right away.  If they\n  // are not yet ready, wait.\n  //\n  // see https://github.com/github/webcomponentsjs#webcomponents-loaderjs for\n  // info about web component readiness events\n  const polyfillPresent = window.WebComponents;\n  const polyfillReady = polyfillPresent && window.WebComponents.ready;\n\n  if (!polyfillPresent || polyfillReady) {\n    handleWebComponentsReady();\n  } else {\n    window.addEventListener(\"WebComponentsReady\", handleWebComponentsReady);\n  }\n}\n\nfunction handleWebComponentsReady() {\n  logger(\"[reveal] web components ready\");\n  reveal();\n}\n","/*!\n * PatternFly Elements: PFElement 1.0.0-prerelease.28\n * @license\n * Copyright 2019 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport { autoReveal } from \"./reveal.js\";\nconst prefix = \"pfe-\";\n\nclass PFElement extends HTMLElement {\n  static create(pfe) {\n    window.customElements.define(pfe.tag, pfe);\n  }\n\n  static debugLog(preference = null) {\n    if (preference !== null) {\n      PFElement._debugLog = !!preference;\n    }\n    return PFElement._debugLog;\n  }\n\n  static log(...msgs) {\n    if (PFElement.debugLog()) {\n      console.log(...msgs);\n    }\n  }\n\n  static get PfeTypes() {\n    return {\n      Container: \"container\",\n      Content: \"content\",\n      Combo: \"combo\"\n    };\n  }\n\n  static get version() {\n    return \"{{version}}\";\n  }\n  \n  static get randomId() {\n    return Math.random().toString(36).substr(2, 9);\n  }\n\n  get version() {\n    return this._pfeClass.version;\n  }\n\n  get pfeType() {\n    return this.getAttribute(`${prefix}type`);\n  }\n\n  set pfeType(value) {\n    this.setAttribute(`${prefix}type`, value);\n  }\n\n  // Returns a single element assigned to that slot; if multiple, it returns the first\n  has_slot(name) {\n    return this.querySelector(`[slot='${name}']`);\n  }\n\n  // Returns an array with all elements assigned to that slot\n  has_slots(name) {\n    return [...this.querySelectorAll(`[slot='${name}']`)];\n  }\n\n  constructor(pfeClass, { type = null, delayRender = false } = {}) {\n    super();\n\n    this.connected = false;\n    this._pfeClass = pfeClass;\n    this.tag = pfeClass.tag;\n    this.props = pfeClass.properties;\n    this.slots = pfeClass.slots;\n    this._queue = [];\n    this.template = document.createElement(\"template\");\n    \n    this.log(`Constructing...`);\n\n    this.attachShadow({ mode: \"open\" });\n\n    if (type) {\n      this._queueAction({\n        type: \"setProperty\",\n        data: {\n          name: \"pfeType\",\n          value: type\n        }\n      });\n    }\n\n    if (!delayRender) {\n      this.log(`Render...`);\n      this.render();\n      this.log(`Rendered.`);\n    }\n    \n    this.log(`Constructed.`);\n  }\n\n  connectedCallback() {\n    this.connected = true;\n    this.log(`Connecting...`);\n\n    if (window.ShadyCSS) {\n      this.log(`Styling...`);\n      window.ShadyCSS.styleElement(this);\n      this.log(`Styled.`);\n    }\n\n    // @TODO maybe we should use just the attribute instead of the class?\n    // https://github.com/angular/angular/issues/15399#issuecomment-318785677\n    this.classList.add(\"PFElement\");\n    this.setAttribute(\"pfelement\", \"\");\n\n    if (typeof this.props === \"object\") {\n      this._mapSchemaToProperties(this.tag, this.props);\n      this.log(`Properties attached.`);\n    }\n\n    if (typeof this.slots === \"object\") {\n      this._mapSchemaToSlots(this.tag, this.slots);\n      this.log(`Slots attached.`);\n    }\n\n    if (this._queue.length) {\n      this._processQueue();\n    }\n\n    this.log(`Connected.`);\n  }\n\n  disconnectedCallback() {\n    this.log(`Disconnecting...`);\n\n    this.connected = false;\n    \n    this.log(`Disconnected.`);\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    if (!this._pfeClass.cascadingAttributes) {\n      return;\n    }\n\n    const cascadeTo = this._pfeClass.cascadingAttributes[attr];\n    if (cascadeTo) {\n      this._copyAttribute(attr, cascadeTo);\n    }\n  }\n\n  _copyAttribute(name, to) {\n    const recipients = [\n      ...this.querySelectorAll(to),\n      ...this.shadowRoot.querySelectorAll(to)\n    ];\n    const value = this.getAttribute(name);\n    const fname = value == null ? \"removeAttribute\" : \"setAttribute\";\n    for (const node of recipients) {\n      node[fname](name, value);\n    }\n  }\n\n  // Map the imported properties json to real props on the element\n  // @notice static getter of properties is built via tooling\n  // to edit modify src/element.json\n  _mapSchemaToProperties(tag, properties) {\n    this.log(\"Mapping properties...\");\n    // Loop over the properties provided by the schema\n    Object.keys(properties).forEach(attr => {\n      let data = properties[attr];\n\n      // Only attach the information if the data provided is a schema object\n      if (typeof data === \"object\") {\n        // Prefix default is true\n        let hasPrefix = true;\n        let attrName = attr;\n        // Set the attribute's property equal to the schema input\n        this[attr] = data;\n        // Initialize the value to null\n        this[attr].value = null;\n\n        if (typeof this[attr].prefixed !== \"undefined\") {\n          hasPrefix = this[attr].prefixed;\n        }\n\n        if (hasPrefix) {\n          attrName = `${prefix}${attr}`;\n        }\n\n        // If the attribute exists on the host\n        if (this.hasAttribute(attrName)) {\n          // Set property value based on the existing attribute\n          this[attr].value = this.getAttribute(attrName);\n        }\n        // Otherwise, look for a default and use that instead\n        else if (data.default) {\n          const dependency_exists = this._hasDependency(tag, data.options);\n          const no_dependencies =\n            !data.options || (data.options && !data.options.dependencies.length);\n          // If the dependency exists or there are no dependencies, set the default\n          if (dependency_exists || no_dependencies) {\n            this.setAttribute(attrName, data.default);\n            this[attr].value = data.default;\n          }\n        }\n      }\n    });\n\n    this.log(\"Properties mapped.\");\n  }\n\n  // Test whether expected dependencies exist\n  _hasDependency(tag, opts) {\n    // Get any possible dependencies for this attribute to exist\n    let dependencies = opts ? opts.dependencies : [];\n    // Initialize the dependency return value\n    let hasDependency = false;\n    // Check that dependent item exists\n    // Loop through the dependencies defined\n    for (let i = 0; i < dependencies.length; i += 1) {\n      const slot_exists =\n        dependencies[i].type === \"slot\" &&\n        this.has_slots(`${tag}--${dependencies[i].id}`).length > 0;\n      const attribute_exists =\n        dependencies[i].type === \"attribute\" &&\n        this.getAttribute(`${prefix}${dependencies[i].id}`);\n      // If the type is slot, check that it exists OR\n      // if the type is an attribute, check if the attribute is defined\n      if (slot_exists || attribute_exists) {\n        // If the slot does exist, add the attribute with the default value\n        hasDependency = true;\n        // Exit the loop\n        break;\n      }\n    }\n    // Return a boolean if the dependency exists\n    return hasDependency;\n  }\n\n  // Map the imported slots json\n  // @notice static getter of properties is built via tooling\n  // to edit modify src/element.json\n  _mapSchemaToSlots(tag, slots) {\n    this.log(\"Validate slots...\");\n    // Loop over the properties provided by the schema\n    Object.keys(slots).forEach(slot => {\n      let slotObj = slots[slot];\n\n      // Only attach the information if the data provided is a schema object\n      if (typeof slotObj === \"object\") {\n        let slotExists = false;\n        let result = [];\n        // If it's a named slot, look for that slot definition\n        if (slotObj.namedSlot) {\n          // Check prefixed slots\n          result = this.has_slots(`${tag}--${slot}`);\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n\n          // Check for unprefixed slots\n          result = this.has_slots(`${slot}`);\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n          // If it's the default slot, look for direct children not assigned to a slot\n        } else {\n          result = [...this.children].filter(child => !child.hasAttribute(\"slot\"));\n          \n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n        }\n\n        // If the slot exists, attach an attribute to the parent to indicate that\n        if (slotExists) {\n          this.setAttribute(`has_${slot}`, \"\");\n        } else {\n          this.removeAttribute(`has_${slot}`);\n        }\n      }\n    });\n    this.log(\"Slots validated.\")\n  }\n\n  _queueAction(action) {\n    this._queue.push(action);\n  }\n\n  _processQueue() {\n    this._queue.forEach(action => {\n      this[`_${action.type}`](action.data);\n    });\n\n    this._queue = [];\n  }\n\n  _setProperty({ name, value }) {\n    this[name] = value;\n  }\n\n  static var(name, element = document.body) {\n    return window\n      .getComputedStyle(element)\n      .getPropertyValue(name)\n      .trim();\n  }\n\n  var(name) {\n    return PFElement.var(name, this);\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = \"\";\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n  }\n\n  log(...msgs) {\n    PFElement.log(`[${this.tag}]`, ...msgs);\n  }\n}\n\nautoReveal(PFElement.log);\n\nexport default PFElement;\n"],"names":["logger","reveal","window","document","body","removeAttribute","autoReveal","logFunction","polyfillPresent","WebComponents","polyfillReady","ready","handleWebComponentsReady","addEventListener","prefix","PFElement","name","querySelector","querySelectorAll","_pfeClass","version","getAttribute","value","setAttribute","pfe","customElements","define","tag","preference","_debugLog","debugLog","log","Container","Content","Combo","Math","random","toString","substr","pfeClass","type","delayRender","connected","props","properties","slots","_queue","template","createElement","attachShadow","mode","_queueAction","data","render","ShadyCSS","styleElement","classList","add","babelHelpers.typeof","_mapSchemaToProperties","_mapSchemaToSlots","length","_processQueue","attr","oldVal","newVal","cascadingAttributes","cascadeTo","_copyAttribute","to","recipients","shadowRoot","fname","node","Object","keys","forEach","hasPrefix","attrName","prefixed","hasAttribute","default","dependency_exists","_hasDependency","options","no_dependencies","dependencies","opts","hasDependency","i","slot_exists","has_slots","id","attribute_exists","slotObj","slot","slotExists","result","namedSlot","nodes","children","filter","child","action","push","var","innerHTML","html","prepareTemplate","appendChild","content","cloneNode","msgs","element","getComputedStyle","getPropertyValue","trim","HTMLElement"],"mappings":"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"}